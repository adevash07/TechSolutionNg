{"version":3,"sources":["components/search/Search.js","pages/balanceScoreCard/components/balanceDoughnutChart/BalanceDoughnutChart.js","pages/balanceScoreCard/components/balanceLineChart/BalanceLineChart.js","pages/balanceScoreCard/components/performanceCard/PerformanceCard.js","pages/balanceScoreCard/components/profilePerformance/ProfilePerformance.js","pages/balanceScoreCard/BalanceScoreCardView.js","pages/balanceScoreCard/BalanceScoreCard.js","pages/balanceScoreCard/index.js"],"names":["Search","iconarrow","ptext","icon","inputype","placetext","inputname","icons","linkpathacct","history","useHistory","className","onClick","push","type","placeholder","name","BalanceDoughnutChart","state","onHover","data","labels","currentData","profileLabel","bitsLabel2","datasets","label","userData","backgroundColor","borderColor","borderWidth","datalabels","anchor","height","weight","options","responsive","maintainAspectRatio","cutoutPercentage","rotation","aspectRatio","layout","padding","elements","line","fill","point","hoverRadius","radius","legend","display","plugins","context","dataset","borderRadius","color","count","length","dataIndex","font","formatter","Math","round","showZero","fontSize","arc","event","chart","_chart","element","getElementAtEvent","xLabel","_index","BalanceLineChart","setState","myImage","Image","src","assets","DashboardPerson","handleSetProfileData","useCallback","itSolutionData","pointStyle","handleSetBidData","bitLabel","lineTension","customBadgeClass","scales","yAxes","gridLines","lineWidth","xAxes","scaleShowHorizontalLines","scaleShowVerticalLines","title","text","position","PerformanceCard","content","btnText","ProfilePerformance","useState","hoveredLabel","setHoveredLable","map","index","style","BalanceScoreCardView","Header","dashboardPage","BalanceScoreCard"],"mappings":"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","file":"static/js/19.31c51d2d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./search.scss\";\r\nimport propTypes from \"prop-types\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Search = ({\r\n  iconarrow,\r\n  ptext,\r\n  icon,\r\n  inputype,\r\n  placetext,\r\n  inputname,\r\n  icons,\r\n  linkpathacct,\r\n}) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"search\">\r\n      <div className=\"search__Arrow\">\r\n        <div>\r\n          {iconarrow && (\r\n            <i\r\n              className=\"search__ArrowDiv\"\r\n              onClick={() => history.push(linkpathacct)}\r\n            >\r\n              {iconarrow}\r\n            </i>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {ptext && <h3 className=\"search__ArrowParagraphy\">{ptext}</h3>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"searchIcon__div\">\r\n        {icon && <i className=\"searchIcon__Icon\">{icon}</i>}\r\n        {inputype && (\r\n          <input\r\n            className=\"search__Input\"\r\n            type={inputype}\r\n            placeholder={placetext}\r\n            name={inputname}\r\n          />\r\n        )}\r\n        {icons && <i className=\"search__InputIcon\">{icons}</i>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  linkpathacct: propTypes.string,\r\n  iconarrow: propTypes.any,\r\n  ptext: propTypes.string,\r\n  icon: propTypes.any,\r\n  icons: propTypes.any,\r\n  inputype: propTypes.string,\r\n  placetext: propTypes.string,\r\n  inputname: propTypes.string,\r\n};\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport propTypes from \"prop-types\";\r\nimport \"chartjs-plugin-labels\";\r\nimport \"./balanceDoughnutChart.scss\";\r\n\r\nconst BalanceDoughnutChart = ({ state, onHover }) => {\r\n  const labels =\r\n    state.currentData === \"Profile\" ? state.profileLabel : state.bitsLabel2;\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"\",\r\n        data: state.userData,\r\n        backgroundColor: state.backgroundColor,\r\n        borderColor: state.backgroundColor,\r\n        borderWidth: 1,\r\n        datalabels: {\r\n          anchor: \"end\",\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"bal-doughnut-chart\">\r\n      <Doughnut\r\n        data={data}\r\n        height={400}\r\n        weight={400}\r\n        options={{\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          cutoutPercentage: 60,\r\n          rotation: 120,\r\n          aspectRatio: 4 / 3,\r\n          layout: {\r\n            padding: 3,\r\n          },\r\n          elements: {\r\n            line: {\r\n              fill: false,\r\n            },\r\n            point: {\r\n              hoverRadius: 7,\r\n              radius: 5,\r\n            },\r\n          },\r\n          legend: {\r\n            display: false,\r\n          },\r\n          plugins: {\r\n            datalabels: {\r\n              backgroundColor: function (context) {\r\n                return context.dataset.backgroundColor;\r\n              },\r\n\r\n              borderColor: \"white\",\r\n              borderRadius: 25,\r\n              borderWidth: 2,\r\n              color: \"white\",\r\n              display: function (context) {\r\n                var dataset = context.dataset;\r\n                var count = dataset.data.length;\r\n                var value = dataset.data[context.dataIndex];\r\n                return value > count * 1.5;\r\n              },\r\n              font: {\r\n                weight: \"bold\",\r\n              },\r\n              padding: 6,\r\n              formatter: Math.round,\r\n              showZero: false,\r\n              fontSize: 13,\r\n              arc: true,\r\n            },\r\n          },\r\n          onClick\r\n          : (event, elements) => {\r\n            if(!elements[0]) return\r\n            const chart = elements[0]._chart;\r\n            const element = chart.getElementAtEvent(event)[0];\r\n           // const dataset = chart.data.datasets[element._datasetIndex];\r\n            const xLabel = chart.data.labels[element._index];\r\n            //const value = dataset.data[element._index];\r\n           // console.log(dataset.label + \" at \" + xLabel + \": \" + value);\r\n            onHover(xLabel)\r\n          }\r\n        \r\n        }}\r\n        \r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default BalanceDoughnutChart;\r\nBalanceDoughnutChart.propTypes = {\r\n  state: propTypes.object,\r\n  onHover: propTypes.func.isRequired\r\n};\r\n","import { useCallback } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport propTypes from \"prop-types\";\r\nimport { FaRegUser, FaChevronUp, FaChevronDown } from \"react-icons/fa\";\r\nimport { VscLocation } from \"react-icons/vsc\";\r\nimport { Badge } from \"components/index\";\r\nimport assets from \"assets\";\r\nimport \"./balanceLineChart.scss\";\r\n\r\nconst BalanceLineChart = ({ state, setState }) => {\r\n  const myImage = new Image(15, 15);\r\n  myImage.src = assets.DashboardPerson;\r\n\r\n  const handleSetProfileData = useCallback(() => {\r\n    const userData = [0, 40, 0, 40, 60, 80];\r\n    const itSolutionData = [40, 80, 40, 80, 100];\r\n    const currentData = \"Profile\";\r\n\r\n    setState((state) => ({\r\n      ...state,\r\n      userData,\r\n      itSolutionData,\r\n      currentData,\r\n      pointStyle: \"circle\",\r\n    }));\r\n  }, [state]);\r\n  const handleSetBidData = useCallback(() => {\r\n    const userData = [40, 0, 60, 40, 20, 60];\r\n    const itSolutionData = [0, 80, 40, 80, 100];\r\n    const currentData = \"Bids\";\r\n    const pointStyle = myImage;\r\n\r\n    setState((state) => ({\r\n      ...state,\r\n      userData,\r\n      itSolutionData,\r\n      currentData,\r\n      pointStyle,\r\n    }));\r\n  }, [state]);\r\n  const data = {\r\n    labels:\r\n      state.currentData === \"Profile\" ? state.profileLabel : state.bitLabel,\r\n    datasets: [\r\n      {\r\n        label: \"ee\",\r\n        fill: false,\r\n        lineTension: 0.6,\r\n        backgroundColor: \"#1A9FFF\",\r\n        borderColor: \"#1A9FFF\",\r\n        borderWidth: 2,\r\n        pointStyle: \"\",\r\n        data: state.itSolutionData,\r\n      },\r\n      {\r\n        label: \"dd\",\r\n        fill: false,\r\n        lineTension: 0.6,\r\n        backgroundColor: \"#FFFFFF\",\r\n        borderColor: \"#EE5783\",\r\n        borderWidth: 2,\r\n        pointStyle: state.pointStyle,\r\n        data: state.userData,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"bal-line-chart\">\r\n      <section>\r\n        <div className=\"badges\">\r\n          <span>\r\n            <Badge customBadgeClass=\"pink\" />\r\n            Your Score\r\n          </span>\r\n          <span>\r\n            <Badge customBadgeClass=\"primary\" />\r\n            iT Solutions average\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"div-end\">\r\n          <span>\r\n            {state.currentData === \"Profile\" ? (\r\n              <FaRegUser />\r\n            ) : (\r\n              <VscLocation />\r\n            )}\r\n          </span>\r\n          <label>{state.currentData} </label>\r\n\r\n          <div className=\"chart-nav\">\r\n            <button onClick={handleSetProfileData}>\r\n              <FaChevronUp />\r\n            </button>\r\n            <button onClick={handleSetBidData}>\r\n              <FaChevronDown />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section>\r\n        <Line\r\n          data={data}\r\n          height={400}\r\n          weight={400}\r\n          options={{\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: true,\r\n                    color: \"#cccccc\",\r\n                    lineWidth: 0.2,\r\n                  },\r\n                },\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  gridLines: {\r\n                    display: true,\r\n                    color: \"#cccccc\",\r\n                    lineWidth: 0.2\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            scaleShowHorizontalLines: true,\r\n            scaleShowVerticalLines: true,\r\n            title: {\r\n              display: true,\r\n              text: \"\",\r\n              fontSize: 20,\r\n            },\r\n            legend: {\r\n              display: false,\r\n              position: \"right\",\r\n            },\r\n          }}\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BalanceLineChart;\r\nBalanceLineChart.propTypes = {\r\n  state: propTypes.object,\r\n  setState: propTypes.func,\r\n};\r\n","import propTypes from \"prop-types\";\r\nimport { Button } from \"components/index\";\r\nimport \"./performanceCard.scss\";\r\n\r\nconst PerformanceCard = ({ title, content, btnText }) => {\r\n  return (\r\n    <div className=\"performance-card\">\r\n      <label>{title}</label>\r\n      <p>{content}</p>\r\n      <Button btnText={btnText} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PerformanceCard;\r\nPerformanceCard.propTypes = {\r\n  title: propTypes.string,\r\n  content: propTypes.string,\r\n  btnText: propTypes.string,\r\n};\r\n","import { useState } from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport BalanceDoughnutChart from \"../balanceDoughnutChart/BalanceDoughnutChart\";\r\nimport PerformanceCard from \"../performanceCard/PerformanceCard\";\r\nimport \"./profilePerf.scss\";\r\n\r\nconst ProfilePerformance = ({ state = {} }) => {\r\n  const labels =\r\n    state.currentData === \"Profile\" ? state.profileLabel : state.bitsLabel2;\r\n  const [hoveredLabel, setHoveredLable] = useState(labels[0]);\r\n\r\n  const handleHover = (label) => {\r\n    setHoveredLable(label)\r\n  }\r\n  return ( \r\n    <div className=\"profile-perf\">\r\n      <h4 className=\"title\">Your profile performance score</h4>\r\n      <main>\r\n        <section>\r\n          <BalanceDoughnutChart state={state} onHover={handleHover} />\r\n        </section>\r\n        <section>\r\n          <PerformanceCard\r\n            title={hoveredLabel}\r\n            content=\"You have to complete your verification process to score high in this grade\"\r\n            btnText={`Go to ${hoveredLabel}`}\r\n          />\r\n        </section>\r\n        <section>\r\n          <ul>\r\n            {labels.map((label, index) => (\r\n              <li key={index}>\r\n                <div>\r\n                  <span\r\n                    className=\"badge\"\r\n                    style={{\r\n                      backgroundColor: state.backgroundColor[index],\r\n                    }}\r\n                  ></span>\r\n                  <small> {label} </small>\r\n                </div>\r\n\r\n                <p>+3%</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePerformance;\r\nProfilePerformance.propTypes = {\r\n  state: propTypes.object,\r\n};\r\n","import { useState } from \"react\";\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport { FaTimesCircle } from \"react-icons/fa\";\r\nimport { FaLongArrowAltLeft } from \"react-icons/fa\";\r\nimport Search from \"../../components/search/Search\";\r\nimport Header from \"layouts/header/Header\";\r\nimport { BalanceLineChart, ProfilePerformance } from \"./components/index\";\r\nimport \"./balanceScoreCardView.scss\"\r\n\r\nconst BalanceScoreCardView = () => {\r\n  const [state, setState] = useState({\r\n    userData: [0, 40, 0, 40, 60, 80],\r\n    itSolutionData: [40, 80, 40, 80, 100],\r\n    profileLabel: [\"Verification\", \"Payment\", \"Profile\", \"Phone number\"],\r\n    bitLabel: [\r\n      \"Bid sent\",\r\n      \"Bid accepted\",\r\n      \"Others sent\",\r\n      \"offers accepted\",\r\n      \"Completed projects\",\r\n    ],\r\n    bitsLabel2: [\r\n      \"Projects\",\r\n      \"Instant offers\",\r\n      \"Completed bids\",\r\n      \"Completed offers\",\r\n    ],\r\n    pointStyle: \"circle\",\r\n    currentData: \"Profile\",\r\n    backgroundColor: [\"#A65DE6\", \"#00EDFF\", \"#004CFF\", \"#FF264C\"],\r\n  });\r\n  return (\r\n    <div className=\"bal-score-card\">\r\n      <Header dashboardPage />\r\n      <main>\r\n        <div className=\"container-search-div\">\r\n          <Search\r\n            linkpathacct=\"/accountsettingpage\"\r\n            iconarrow={<FaLongArrowAltLeft />}\r\n            ptext=\"Balance Score Card\"\r\n            icon={<BiSearch />}\r\n            inputype=\"search\"\r\n            placetext=\"search\"\r\n            inputname=\"search\"\r\n            icons={<FaTimesCircle />}\r\n          />\r\n        </div>\r\n        <BalanceLineChart state={state} setState={setState} />\r\n        <ProfilePerformance state={state} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BalanceScoreCardView;\r\n","import BalanceScoreCardView from \"./BalanceScoreCardView\";\r\n\r\nconst BalanceScoreCard = () => {\r\n  return (\r\n    <>\r\n      <BalanceScoreCardView />\r\n    </>\r\n  );\r\n};\r\nexport default BalanceScoreCard;\r\n","import BalanceScoreCard from \"./BalanceScoreCard\";\r\n\r\nexport default BalanceScoreCard;\r\n"],"sourceRoot":""}