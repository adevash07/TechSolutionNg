{"version":3,"sources":["navigations/CONSTANTS.js","pages/userProfile/graphql/reactiveVariables.js","components/loading/Loading.js","navigations/PrivateRoute.js","navigations/RestrictedRoutes.js","navigations/RouterConfig.js","App.js","reportWebVitals.js","configs/apolloClient/cache.js","configs/apolloClient/index.js","index.js"],"names":["HOME_ROUTE","LOGIN_ROUTE","DASHBOARD_ROUTE","CONGRATESPAGE_ROUTE","CONGRATESTWOPAGE_ROUTE","ACCOUNTSETTINGPAGE_ROUTE","MEMBERSHIPSETTINGPAGE_ROUTE","DEVICESHARINGPAGE_ROUTE","PRIVACYANDSECURITYPAGE_ROUTE","SIGNUP_ROUTE","USER_PROFILE_ROUTE","PROFILE_PREVIEW_ROUTE","USER_PROFILE_INFORMATION_ROUTE","MESSAGES_ROUTE","educationVar","makeVar","employmentVar","paymentVar","talentVar","titleOverviewVar","profileVar","Loading","loadingAbsolute","className","PrivateRoute","Component","component","location","isAuthenticated","rest","render","props","to","pathname","state","from","Dashboard","lazy","CongratesPage","CongratesTwoPage","AccountSettingPage","MembershipSettingPage","DeviceSharingPage","PrivacyAndSecurityPage","ProfileInformation","UserProfile","ProfilePreview","Messages","Account","BalanceScoreCard","RestrictedRoutes","path","Home","Login","SignUp","RouterConfig","useLocation","fallback","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","cache","InMemoryCache","typePolicies","Query","fields","read","client","ApolloClient","link","HttpLink","uri","ReactDOM","StrictMode","window","document","getElementById"],"mappings":"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","file":"static/js/main.4dbb6d19.chunk.js","sourcesContent":["export const HOME_ROUTE = \"/\";\r\nexport const LOGIN_ROUTE = \"/login\";\r\nexport const DASHBOARD_ROUTE = \"/dashboard\";\r\nexport const INVOICE_RESEND_ROUTE = \"/dashboard/invoices/resend\";\r\nexport const CONGRATESPAGE_ROUTE = \"/congratespage\";\r\nexport const CONGRATESTWOPAGE_ROUTE = \"/congratestwopage\";\r\nexport const ACCOUNTSETTINGPAGE_ROUTE = \"/accountsettingpage\";\r\nexport const MEMBERSHIPSETTINGPAGE_ROUTE = \"/membershipsettingpage\";\r\nexport const DEVICESHARINGPAGE_ROUTE = \"/DeviceSharingPage\";\r\nexport const PRIVACYANDSECURITYPAGE_ROUTE = \"/privacyAndSecurityPage\";\r\nexport const PRIVACYPASSWORD_ROUTE = \"/privacyAndSecurityPage/password\";\r\nexport const PRIVACY2FA_ROUTE = \"/privacyAndSecurityPage/two-factor\";\r\n\r\nexport const SIGNUP_ROUTE = \"/signup\";\r\nexport const USER_PROFILE_ROUTE = \"/user-profile\";\r\nexport const PROFILE_PREVIEW_ROUTE = \"/profile-preview\";\r\nexport const USER_PROFILE_INFORMATION_ROUTE = \"/user-profile-info\";\r\nexport const MESSAGES_ROUTE = \"/messages\";\r\n","import { makeVar } from \"@apollo/client\";\r\n\r\nexport const educationVar = makeVar({});\r\nexport const employmentVar = makeVar({});\r\nexport const paymentVar = makeVar({});\r\nexport const talentVar = makeVar({});\r\nexport const titleOverviewVar = makeVar({});\r\nexport const profileVar = makeVar({});\r\n","import React from \"react\";\r\nimport \"./loading.scss\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst Loading = ({ loadingAbsolute }) => {\r\n  return (\r\n    <>\r\n      {loadingAbsolute ? (\r\n        <div className=\"loadingPage__cube\">\r\n          <div className=\"loadingPage__cubeBox\">\r\n            <div className=\"loadingPage__cubeContainer\">\r\n              <span className=\"loadingPage__side\"></span>\r\n              <span className=\"loadingPage__side\"></span>\r\n              <span className=\"loadingPage__side\"></span>\r\n              <span className=\"loadingPage__side\"></span>\r\n              <span className=\"loadingPage__side\"></span>\r\n              <span className=\"loadingPage__side\"></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"loadingPage\">\r\n          <div className=\"loadingPage__container\">\r\n            <div className=\"loadingPage__letterDiv\">\r\n              <span className=\"loadingPage__letter\">I</span>\r\n              <span className=\"loadingPage__letter\">T</span>\r\n              <span className=\"loadingPage__letter\">S</span>\r\n              <span className=\"loadingPage__letter\">o</span>\r\n              <span className=\"loadingPage__letter\">l</span>\r\n              <span className=\"loadingPage__letter\">u</span>\r\n              <span className=\"loadingPage__letter\">t</span>\r\n              <span className=\"loadingPage__letter\">i</span>\r\n              <span className=\"loadingPage__letter\">o</span>\r\n              <span className=\"loadingPage__letter\">n</span>\r\n              <span className=\"loadingPage__letter\">s</span>\r\n            </div>\r\n            <div className=\"loadingPage__line\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nLoading.propTypes = {\r\n  loadingAbsolute: propTypes.bool,\r\n};\r\n\r\nexport default Loading;\r\n","import { Redirect, Route } from \"react-router-dom\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  location,\r\n  isAuthenticated,\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isAuthenticated ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/login\",\r\n            state: { from: location.pathname },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  location: propTypes.any,\r\n  isAuthenticated: propTypes.bool.isRequired,\r\n  component: propTypes.any,\r\n};\r\nexport default PrivateRoute;\r\n","import { lazy } from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport {\r\n  DASHBOARD_ROUTE,\r\n  CONGRATESPAGE_ROUTE,\r\n  CONGRATESTWOPAGE_ROUTE,\r\n  ACCOUNTSETTINGPAGE_ROUTE,\r\n  MEMBERSHIPSETTINGPAGE_ROUTE,\r\n  DEVICESHARINGPAGE_ROUTE,\r\n  PRIVACYANDSECURITYPAGE_ROUTE,\r\n  USER_PROFILE_ROUTE,\r\n  PROFILE_PREVIEW_ROUTE,\r\n  USER_PROFILE_INFORMATION_ROUTE,\r\n  MESSAGES_ROUTE,\r\n} from \"./CONSTANTS\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nconst Dashboard = lazy(() => import(\"pages/dashboard\"));\r\nconst CongratesPage = lazy(() => import(\"pages/congratesPage\"));\r\nconst CongratesTwoPage = lazy(() => import(\"pages/congratesTwoPage\"));\r\nconst AccountSettingPage = lazy(() => import(\"pages/accountSettingPage\"));\r\nconst MembershipSettingPage = lazy(() => import(\"pages/membershipSettingPage\"));\r\nconst DeviceSharingPage = lazy(() => import(\"pages/deviceSharingPage\"));\r\nconst PrivacyAndSecurityPage = lazy(() =>\r\n  import(\"pages/privacyAndSecurityPage\")\r\n);\r\nconst ProfileInformation = lazy(() => import(\"pages/userProfileInformation\"));\r\nconst UserProfile = lazy(() => import(\"pages/userProfile\"));\r\nconst ProfilePreview = lazy(() => import(\"pages/userProfile/profilePreview\"));\r\nconst Messages = lazy(() => import(\"pages/messages\"));\r\nconst Account = lazy(() => import(\"pages/accountSettingPage\"));\r\nconst BalanceScoreCard = lazy(() => import(\"pages/balanceScoreCard\"));\r\n\r\nconst RestrictedRoutes = (isAuthenticated, location) => {\r\n  return (\r\n    <>\r\n      <PrivateRoute\r\n        path={DASHBOARD_ROUTE}\r\n        component={Dashboard}\r\n        isAuthenticated={isAuthenticated}\r\n        location={location}\r\n      />\r\n      <PrivateRoute\r\n        path={CONGRATESPAGE_ROUTE}\r\n        component={CongratesPage}\r\n        isAuthenticated={isAuthenticated}\r\n        location={location}\r\n      />\r\n      <PrivateRoute\r\n        path={CONGRATESTWOPAGE_ROUTE}\r\n        component={CongratesTwoPage}\r\n        isAuthenticated={isAuthenticated}\r\n        location={location}\r\n      />\r\n      <PrivateRoute\r\n        path={ACCOUNTSETTINGPAGE_ROUTE}\r\n        component={AccountSettingPage}\r\n        isAuthenticated={isAuthenticated}\r\n        location={location}\r\n      />\r\n      <PrivateRoute\r\n        path={MEMBERSHIPSETTINGPAGE_ROUTE}\r\n        component={MembershipSettingPage}\r\n        isAuthenticated={isAuthenticated}\r\n        location={location}\r\n      />\r\n\r\n      <PrivateRoute\r\n        path={DEVICESHARINGPAGE_ROUTE}\r\n        component={DeviceSharingPage}\r\n        isAuthenticated={isAuthenticated}\r\n        location={location}\r\n      />\r\n      <PrivateRoute\r\n        path={PRIVACYANDSECURITYPAGE_ROUTE}\r\n        component={PrivacyAndSecurityPage}\r\n        isAuthenticated={isAuthenticated}\r\n        location={location}\r\n      />\r\n      <PrivateRoute\r\n        path={USER_PROFILE_ROUTE}\r\n        component={UserProfile}\r\n        isAuthenticated={isAuthenticated}\r\n        location={location}\r\n      />\r\n      <PrivateRoute\r\n        path={USER_PROFILE_INFORMATION_ROUTE}\r\n        component={ProfileInformation}\r\n        isAuthenticated={isAuthenticated}\r\n        location={location}\r\n      />\r\n      <PrivateRoute\r\n        path={PROFILE_PREVIEW_ROUTE}\r\n        component={ProfilePreview}\r\n        isAuthenticated={isAuthenticated}\r\n        location={location}\r\n      />\r\n      <PrivateRoute\r\n        path={MESSAGES_ROUTE}\r\n        component={Messages}\r\n        isAuthenticated={isAuthenticated}\r\n        location={location}\r\n      />\r\n      <PrivateRoute\r\n        path={`${ACCOUNTSETTINGPAGE_ROUTE}/accounts`}\r\n        component={Account}\r\n        isAuthenticated={isAuthenticated}\r\n        location={location}\r\n      />\r\n      <PrivateRoute\r\n        path={`${ACCOUNTSETTINGPAGE_ROUTE}/balance-score-card`}\r\n        component={BalanceScoreCard}\r\n        isAuthenticated={isAuthenticated}\r\n        location={location}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default RestrictedRoutes;\r\nRestrictedRoutes.propTypes = {\r\n  isAuthenticated: propTypes.bool.isRequired,\r\n  location: propTypes.any.isRequired,\r\n};\r\n","import Loading from \"components/loading/Loading\";\r\nimport { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, useLocation } from \"react-router-dom\";\r\nimport RestrictedRoutes from \"./RestrictedRoutes\";\r\nimport { HOME_ROUTE, LOGIN_ROUTE, SIGNUP_ROUTE } from \"./CONSTANTS\";\r\nconst Home = lazy(() => import(\"pages/home\"));\r\nconst Login = lazy(() => import(\"pages/login\"));\r\nconst SignUp = lazy(() => import(\"pages/signup\"));\r\n\r\nconst RouterConfig = () => {\r\n  const isAuthenticated = true;\r\n  const location = useLocation();\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <Switch>\r\n        <Route exact path={HOME_ROUTE} component={Home} />\r\n        <Route exact path={LOGIN_ROUTE} component={Login} />\r\n        <Route path={SIGNUP_ROUTE} component={SignUp} />\r\n        <RestrictedRoutes\r\n          isAuthenticated={isAuthenticated}\r\n          location={location}\r\n        />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default RouterConfig;\r\n","import RouterConfig from \"navigations/RouterConfig\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <RouterConfig />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { InMemoryCache } from \"@apollo/client\";\r\nimport {\r\n  educationVar,\r\n  talentVar,\r\n} from \"pages/userProfile/graphql/reactiveVariables\";\r\n\r\nconst cache = new InMemoryCache({\r\n  typePolicies: {\r\n    Query: {\r\n      fields: {\r\n        educationVar: {\r\n          read() {\r\n            return educationVar();\r\n          },\r\n        },\r\n        talentVar: {\r\n          read() {\r\n            return talentVar();\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\nexport default cache;\r\n","import { ApolloClient, HttpLink } from \"@apollo/client\";\r\nimport cache from \"./cache\";\r\n\r\nconst BASE_URL = \"http://localhost:5000/graphql\";\r\n\r\nconst client = new ApolloClient({\r\n  cache,\r\n  link: new HttpLink({\r\n    uri: BASE_URL,\r\n  }),\r\n});\r\n\r\nexport default client;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport client from \"configs/apolloClient\";\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n      <Router>\r\n        <React.StrictMode>\r\n          <App />\r\n        </React.StrictMode>\r\n      </Router>\r\n  </ApolloProvider>,\r\n  window.document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}